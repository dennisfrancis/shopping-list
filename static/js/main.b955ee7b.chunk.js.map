{"version":3,"sources":["consts/itemConsts.ts","contexts/storage.ts","components/ItemDisplay.tsx","components/ItemControls.tsx","types/item.ts","components/ItemList.tsx","pages/NewList.tsx","components/ListDisplay.tsx","pages/PreviousLists.tsx","pages/DataPage.tsx","storage/storageDefs.ts","App.tsx","index.tsx"],"names":["Units","Set","Categories","StorageType","db","undefined","listeners","this","invokeListeners","bind","items","forEach","listener","getAllItems","then","add","delete","item","addUpdateItem","deleteItem","clearUnsaved","Promise","saveDate","saveUnsaved","exportToJSON","obj","JSON","stringify","jsonText","res","importFromJSON","StorageContext","React","createContext","StorageProvider","Provider","ItemDisplay","props","disabled","newItemStatesAndSetters","setSearchListVisible","removeItem","selected","name","text","comment","className","style","width","onClick","setName","setQuantity","quantity","setUnit","unit","setComment","setExisting","setCategory","category","display","fontStyle","color","type","aria-label","ItemControls","storage","useContext","masterList","newList","setNewList","setMasterList","masterItems","newItemName","setNewItemName","existing","date","nextList","masterItem","find","push","id","htmlFor","list","onChange","e","currentTarget","value","findIndex","onContextMenu","preventDefault","required","map","min","qty","parseFloat","Math","round","toString","thisUnit","cat","flexDirection","justifyContent","addUpdate","saved","currList","matchItemIndex","listCopy","matchItem","currentSet","has","newSet","flexGrow","ItemSearchList","itemListDiv","useRef","searchYPosition","setSearchYPosition","useLayoutEffect","current","scrollTop","itemDisplayList","ref","height","overflowY","onScroll","cloneItem","getItemFromObject","objSrc","Date","itemListToText","message","window","localStorage","getItem","itemsText","toLocaleDateString","length","sublists","Map","sub","get","set","categories","keys","sort","repeat","index","commentString","join","ItemList","useState","copied","setCopied","history","useHistory","copyList","navigator","clipboard","writeText","setTimeout","newDate","outMap","outList","NewItemList","clearNewItemControls","marginTop","setRunFetchEffect","NewList","searchListVisible","nameToRemove","filter","oldItem","ListDisplay","setSelectedDate","toLocaleString","readOnly","PreviousLists","selectedDate","dateMap","dateList","date1","date2","valueOf","selectedItems","marginLeft","size","thisDate","DataPage","setMessage","importStatus","setImportStatus","importButtonText","settingsNameId","exportToJSONText","a","document","createElement","file","Blob","href","URL","createObjectURL","download","click","marginBottom","inp","getElementById","files","importFromJSONText","accept","placeholder","rows","setItem","DB_NAME","DB_SHOPPING_LIST_STORE_NAME","ShoppingDatabase","maxCount","resolve","reject","getReq","transaction","objectStore","getAll","onerror","event","console","debug","Error","error","onsuccess","result","keyRangeOnly","IDBKeyRange","only","getItemsWithDate","found","setReq","catch","reason","request","clear","oncomplete","getItemsSaved","clearItem","prevItem","itemClone","put","unSavedItem","newItem","jsonString","parse","Array","isArray","itemObj","repr","retVal","clearAll","i","useEffect","storageDb","openDbReq","open","onupgradeneeded","tx","target","objectStoreNames","contains","listStore","indexNames","createIndex","unique","createObjectStore","keyPath","autoIncrement","onblocked","openDb","indexedDB","setDB","fetch","App","dbIsEmpty","setDBIsEmpty","setMasterItems","setDateMap","setDate","runFetchEffect","itemStatesAndSetters","hasDB","dbListener","mList","nameToItem","currentList","dateMapTemp","dateItemList","values","addListener","removeListener","to","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b955ee7b.chunk.js","sourcesContent":["export const Units = new Set([\n  'Kg',\n  'gm',\n  'Packet(s)',\n  'No',\n]);\n\nexport const Categories = new Set([\n  'Vegetables',\n  'Fruits',\n  'Medicines',\n]);\n","import React from 'react';\nimport { Item } from '../types/item';\nimport { ShoppingDatabase } from '../storage/storageDefs';\n\n// eslint-disable-next-line no-unused-vars\ntype ListenerType = (x: Item[]) => void;\n\nexport class StorageType {\n  private db: ShoppingDatabase | undefined = undefined;\n\n  private listeners = new Set<ListenerType>();\n\n  constructor(db?: ShoppingDatabase) {\n    this.db = db;\n    this.invokeListeners = this.invokeListeners.bind(this);\n  }\n\n  public setDB(db: ShoppingDatabase): void {\n    this.db = db;\n  }\n\n  public hasDB(): boolean {\n    return !!this.db;\n  }\n\n  private invokeListeners(items: Item[]): void {\n    // console.log('Invoking ' + this.masterListeners.size + ' master listeners.');\n    this.listeners.forEach((listener) => {\n      listener(items);\n    });\n  }\n\n  public fetch(): void {\n    if (!this.db) {\n      return;\n    }\n\n    this.db.getAllItems().then(this.invokeListeners);\n  }\n\n  public addListener(listener: ListenerType): void {\n    this.listeners.add(listener);\n  }\n\n  public removeListener(listener: ListenerType): void {\n    this.listeners.delete(listener);\n  }\n\n  public addUpdate(item: Item): void {\n    if (!this.db) {\n      return;\n    }\n\n    this.db.addUpdateItem(item);\n  }\n\n  public delete(item: Item): void {\n    if (!this.db) {\n      return;\n    }\n\n    this.db.deleteItem(item);\n  }\n\n  public clearUnsaved(): Promise<undefined> {\n    if (!this.db) {\n      return new Promise<undefined>(() => undefined);\n    }\n\n    return this.db.clearUnsaved();\n  }\n\n  public saveUnsaved(saveDate: Date): Promise<undefined> {\n    if (!this.db) {\n      return new Promise<undefined>(() => undefined);\n    }\n\n    return this.db.saveUnsaved(saveDate);\n  }\n\n  public async exportToJSONText(): Promise<string> {\n    let obj;\n    try {\n      obj = await this.db?.exportToJSON();\n    } catch (e) {\n      return '';\n    }\n\n    return JSON.stringify(obj);\n  }\n\n  public async importFromJSONText(jsonText: string): Promise<boolean> {\n    let res = false;\n    try {\n      res = !!await this.db?.importFromJSON(jsonText);\n    } catch (e) {\n      return false;\n    }\n\n    return res;\n  }\n}\n\nexport const StorageContext = React.createContext({} as StorageType);\nexport const StorageProvider = StorageContext.Provider;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport { Item, ItemStatesAndSetters } from '../types/item';\n\nexport default function ItemDisplay(props: {\n  item: Item,\n  newItemStatesAndSetters?: ItemStatesAndSetters,\n  // eslint-disable-next-line no-unused-vars\n  removeItem?: (x: Item) => void,\n  disabled?: boolean,\n  setSearchListVisible?: React.Dispatch<React.SetStateAction<boolean>>,\n}) {\n  const {\n    disabled,\n    newItemStatesAndSetters,\n    item,\n    setSearchListVisible,\n    removeItem,\n  } = props;\n  const handleItemClick = () => {\n    if (disabled) return;\n\n    if (!newItemStatesAndSetters) return;\n\n    newItemStatesAndSetters.setName(item.name);\n    newItemStatesAndSetters.setQuantity(item.quantity);\n    newItemStatesAndSetters.setUnit(item.unit);\n    newItemStatesAndSetters.setComment(item.comment);\n    newItemStatesAndSetters.setExisting(true);\n    newItemStatesAndSetters.setCategory(item.category);\n\n    if (setSearchListVisible) {\n      setSearchListVisible(false); // Hide search list\n      if (newItemStatesAndSetters) {\n        newItemStatesAndSetters.setExisting(false);\n      }\n    }\n  };\n\n  const selected = newItemStatesAndSetters ?\n    (newItemStatesAndSetters.name === item.name) : false;\n  const localRemoveItem = () => {\n    if (removeItem) removeItem(item);\n  };\n\n  const text = item.name + (item.comment ? ` (${item.comment})` : '');\n  return (\n    <li className={`list-group-item d-flex justify-content-between align-items-start${(selected ? ' active' : '')}${(disabled ? ' disabled' : '')}`}>\n\n      { /* eslint-disable-next-line jsx-a11y/click-events-have-key-events */ }\n      <div className=\"ms-2 me-auto\" style={{ width: '100vw' }} onClick={handleItemClick}>\n        <div className=\"fw-bold\" style={{ display: 'inline' }}>{text}</div>\n        <div>\n          {item.quantity}\n          &nbsp;\n          {item.unit}\n          &nbsp;\n          {(item.category !== undefined)\n            && <small style={{ fontStyle: 'italic', color: 'red' }}>{`#${item.category}`}</small>}\n        </div>\n      </div>\n      {removeItem && <button type=\"button\" className={(selected ? 'btn-close btn-close-white' : 'btn-close')} aria-label=\"Close\" onClick={localRemoveItem} />}\n    </li>\n  );\n}\n","import React, { useContext, useLayoutEffect, useRef } from 'react';\nimport { Categories, Units } from '../consts/itemConsts';\nimport { StorageContext } from '../contexts/storage';\nimport { Item, ItemStatesAndSetters } from '../types/item';\nimport ItemDisplay from './ItemDisplay';\n\nimport '../styles/itemcontrols.css';\n\ntype ItemControlProps = {\n  masterList: Set<string>;\n  masterItems: Item[];\n  setMasterList: React.Dispatch<React.SetStateAction<Set<string>>>;\n  newList: Item[];\n  setNewList: React.Dispatch<React.SetStateAction<Item[]>>;\n  newItemStatesAndSetters: ItemStatesAndSetters;\n  setSearchListVisible: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\ntype ItemSearchListProps = {\n  masterItems: Item[];\n  newList: Item[];\n  newItemStatesAndSetters: ItemStatesAndSetters;\n  setSearchListVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  searchYPosition: number;\n  setSearchYPosition: React.Dispatch<React.SetStateAction<number>>;\n}\n\nexport function ItemControls(props: ItemControlProps) {\n  const storage = useContext(StorageContext);\n  const {\n    newItemStatesAndSetters,\n    masterList,\n    newList,\n    setNewList,\n    setMasterList,\n    masterItems,\n    setSearchListVisible,\n  } = props;\n\n  const {\n    name: newItemName,\n    setName: setNewItemName,\n    quantity,\n    setQuantity,\n    unit,\n    setUnit,\n    comment,\n    setComment,\n    existing,\n    setExisting,\n    date,\n    category,\n    setCategory,\n  } = newItemStatesAndSetters;\n\n  const nextList: string[] = [];\n  masterList.forEach((masterItem) => {\n    if (!newList.find((item) => item.name === masterItem)) {\n      nextList.push(masterItem);\n    }\n  });\n\n  function handleNewItem(e: React.FormEvent<HTMLInputElement>) {\n    e.preventDefault();\n\n    if (!newItemName || !quantity || !unit) return;\n\n    storage.addUpdate({\n      name: newItemName,\n      quantity,\n      unit,\n      comment,\n      saved: 0,\n      date,\n      category,\n    });\n    setNewList((currList) => {\n      const matchItemIndex = currList.findIndex((item) => item.name === newItemName);\n      if (matchItemIndex === -1) {\n        return [\n          ...currList,\n          {\n            name: newItemName,\n            quantity,\n            unit,\n            comment,\n            saved: 0,\n            date,\n            category,\n          },\n        ];\n      }\n\n      const listCopy = [...currList];\n      const matchItem = listCopy[matchItemIndex];\n      matchItem.quantity = quantity;\n      matchItem.unit = unit;\n      matchItem.comment = comment;\n      matchItem.category = category;\n      return listCopy;\n    });\n\n    setMasterList((currentSet) => {\n      if (currentSet.has(newItemName)) {\n        return currentSet;\n      }\n      const newSet = new Set<string>(currentSet);\n      newSet.add(newItemName);\n      return newSet;\n    });\n    setNewItemName('');\n    setQuantity(0);\n    setUnit('');\n    setComment('');\n    setExisting(false);\n    setCategory(undefined);\n  }\n\n  function handleItemNameChange(e: React.FormEvent<HTMLInputElement>) {\n    setNewItemName(e.currentTarget.value);\n    const masterItem = masterItems.find((item) => item.name === e.currentTarget.value);\n    if (masterItem) {\n      setQuantity(masterItem.quantity);\n      setUnit(masterItem.unit);\n      setUnit(masterItem.unit);\n      setComment(masterItem.comment);\n      setCategory(masterItem.category);\n    }\n    setExisting(newList.findIndex((item) => item.name === e.currentTarget.value) !== -1);\n  }\n\n  function handleQtyChange(e: React.FormEvent<HTMLInputElement>) {\n    if (e.currentTarget.value === '') {\n      setQuantity(0);\n      return;\n    }\n    const qty = parseFloat(e.currentTarget.value);\n    setQuantity(Math.round(qty * 10) / 10);\n  }\n\n  function handleUnitChange(e: React.FormEvent<HTMLInputElement>) {\n    setUnit(e.currentTarget.value);\n  }\n\n  function handleCommentsChange(e: React.FormEvent<HTMLInputElement>) {\n    setComment(e.currentTarget.value);\n  }\n\n  function handleClear() {\n    setNewItemName('');\n    setQuantity(0);\n    setUnit('');\n    setComment('');\n    setExisting(false);\n    setCategory(undefined);\n  }\n\n  function handleCategoryChange(e: React.FormEvent<HTMLInputElement>) {\n    setCategory(e.currentTarget.value === '' ? undefined : e.currentTarget.value);\n  }\n\n  function handleContextMenu(e: React.FormEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setSearchListVisible(true);\n  }\n\n  return (\n    <form id=\"item-controls\">\n      <div className=\"mb-3\">\n        <label htmlFor=\"item-search\" className=\"form-label\">Item name</label>\n        <input\n          type=\"search\"\n          id=\"item-search\"\n          className=\"form-control bottom-border-only\"\n          list=\"next-item-list\"\n          aria-label=\"Search through master list\"\n          onChange={handleItemNameChange}\n          onContextMenu={handleContextMenu}\n          value={newItemName}\n          required\n        />\n      </div>\n\n      <label htmlFor=\"next-item-list\" className=\"form-label\">\n        <datalist id=\"next-item-list\">\n          {nextList.map((item) => <option key={item} value={item} aria-label={item} />)}\n        </datalist>\n      </label>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"qty-input\" className=\"form-label\">Quantity</label>\n        <input\n          type=\"number\"\n          className=\"form-control bottom-border-only\"\n          id=\"qty-input\"\n          aria-label=\"Quantity\"\n          min={1}\n          required\n          onChange={handleQtyChange}\n          value={quantity === 0 ? '' : (quantity.toString())}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"unit-input\" className=\"form-label\">Unit</label>\n        <input\n          type=\"text\"\n          className=\"form-control bottom-border-only\"\n          id=\"unit-input\"\n          list=\"unit-list\"\n          aria-label=\"Unit\"\n          required\n          onChange={handleUnitChange}\n          value={unit}\n        />\n      </div>\n\n      <datalist id=\"unit-list\">\n        {[...Units].map(\n          (thisUnit) => <option key={thisUnit} value={thisUnit} aria-label={thisUnit} />,\n        )}\n      </datalist>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"comments-input\" className=\"form-label\">Comments</label>\n        <input\n          type=\"text\"\n          className=\"form-control bottom-border-only\"\n          id=\"comments-input\"\n          aria-label=\"Comments\"\n          onChange={handleCommentsChange}\n          value={comment}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"category-input\" className=\"form-label\">Category</label>\n        <input\n          type=\"text\"\n          className=\"form-control bottom-border-only\"\n          id=\"category-input\"\n          list=\"category-list\"\n          aria-label=\"Unit\"\n          required\n          onChange={handleCategoryChange}\n          value={category === undefined ? '' : category}\n        />\n      </div>\n\n      <datalist id=\"category-list\">\n        {[...Categories].map((cat) => <option key={cat} value={cat} aria-label={cat} />)}\n      </datalist>\n\n      <br />\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n        <input\n          type=\"submit\"\n          value={existing ? 'Modify' : 'Add'}\n          className=\"btn btn-primary\"\n          onClick={handleNewItem}\n          style={{ flexGrow: 0.40 }}\n        />\n        <input\n          type=\"button\"\n          value=\"Clear\"\n          className=\"btn btn-danger\"\n          onClick={handleClear}\n          style={{ flexGrow: 0.40 }}\n        />\n      </div>\n    </form>\n  );\n}\n\nexport function ItemSearchList(props: ItemSearchListProps) {\n  const itemListDiv = useRef<HTMLDivElement>(null);\n  const {\n    searchYPosition,\n    setSearchYPosition,\n    masterItems,\n    newItemStatesAndSetters,\n    newList,\n    setSearchListVisible,\n  } = props;\n  useLayoutEffect(() => {\n    if (itemListDiv.current) {\n      itemListDiv.current.scrollTop = searchYPosition;\n    }\n  });\n\n  const itemDisplayList: JSX.Element[] = [];\n  masterItems.forEach((masterItem) => {\n    itemDisplayList.push(\n      <ItemDisplay\n        key={masterItem.name}\n        item={masterItem}\n        newItemStatesAndSetters={newItemStatesAndSetters}\n        disabled={!!newList.find((item) => item.name === masterItem.name)}\n        setSearchListVisible={setSearchListVisible}\n      />,\n    );\n  });\n\n  function handleScroll(e: React.UIEvent) {\n    setSearchYPosition(e.currentTarget.scrollTop);\n  }\n\n  return (\n    <div\n      id=\"item-search-list\"\n      ref={itemListDiv}\n      style={{ height: 'calc(100vh - 220px)', overflowY: 'scroll' }}\n      onScroll={handleScroll}\n    >\n      {itemDisplayList}\n    </div>\n  );\n}\n","/* eslint-disable no-unused-vars */\nexport type BooleanNumber = 0 | 1;\n\nexport type Item = {\n  name: string;\n  quantity: number;\n  unit: string;\n  comment: string;\n  date: Date;\n  saved: BooleanNumber;\n  category: string | undefined;\n};\n\nexport type ItemStatesAndSetters = {\n  name: string;\n  setName: (name: string) => void;\n  quantity: number;\n  setQuantity: (qty: number) => void;\n  unit: string;\n  setUnit: (unit: string) => void;\n  comment: string;\n  setComment: (comment: string) => void;\n  date: Date;\n  setDate: (date: Date) => void;\n  existing: boolean;\n  setExisting: (val: boolean) => void;\n  category: string | undefined;\n  setCategory: (category: string | undefined) => void;\n}\n\nexport function cloneItem(item: Item): Item {\n  return {\n    name: item.name,\n    quantity: item.quantity,\n    unit: item.unit,\n    comment: item.comment,\n    date: item.date,\n    saved: item.saved,\n    category: item.category,\n  };\n}\n\nexport type JSONRepresentationType = {\n  items: Item[];\n  name: string;\n  message: string;\n}\n\nexport type ItemLikeObject = {\n  name?: unknown;\n  quantity?: unknown;\n  unit?: unknown;\n  comment?: unknown;\n  date?: unknown;\n  saved?: unknown;\n  category?: unknown;\n}\n\nexport function getItemFromObject(objSrc: unknown): Item | undefined {\n  if (typeof objSrc !== 'object') {\n    return undefined;\n  }\n\n  const obj = objSrc as ItemLikeObject;\n\n  if (typeof obj.name !== 'string' ||\n    typeof obj.quantity !== 'number' ||\n    typeof obj.unit !== 'string' ||\n    typeof obj.comment !== 'string' ||\n    typeof obj.date !== 'string' ||\n    typeof obj.saved !== 'number' ||\n    (typeof obj.category !== 'string' && typeof obj.category !== 'undefined')) {\n    return undefined;\n  }\n\n  return {\n    name: obj.name,\n    quantity: obj.quantity,\n    unit: obj.unit,\n    comment: obj.comment,\n    date: new Date(obj.date),\n    saved: obj.saved as BooleanNumber,\n    category: obj.category,\n  };\n}\n\nexport interface StorageMin {\n  clear(): void;\n  getItem(key: string): string | null;\n  removeItem(key: string): void;\n  setItem(key: string, value: string): void;\n}\n","/* eslint-disable */\nimport { useContext, useState } from \"react\";\nimport { Item, ItemStatesAndSetters, cloneItem } from '../types/item';\nimport ItemDisplay from '../components/ItemDisplay';\nimport { StorageContext } from '../contexts/storage';\nimport { useHistory } from 'react-router-dom';\n\nimport '../styles/newitemlist.css';\n\nconst itemListToText = (list: Item[]): string => {\n    let message = window.localStorage.getItem('settings_message');\n    let itemsText: string[] = !message ? [`${list[0].date.toLocaleDateString()}`, `${list.length} items`, ''] :\n        [message, ''];\n\n    let sublists = new Map<string, Item[]>();\n    const cat2String = (category: string | undefined) => category === undefined ? '' : category;\n    list.forEach(item => {\n        const cat = cat2String(item.category);\n        const sub = sublists.get(cat);\n        if (sub)\n            sub.push(item);\n        else\n            sublists.set(cat, [item]);\n    });\n\n    let categories = [...sublists.keys()];\n    categories.sort();\n\n    categories.forEach((cat: string) => {\n        if (cat === '') {\n            itemsText.push('');\n        } else {\n            itemsText.push('');\n            itemsText.push(cat);\n            itemsText.push('='.repeat(cat.length));\n        }\n\n        const items = sublists.get(cat) as Item[];\n        items.forEach((item, index) => {\n            let commentString = item.comment ? ` (${item.comment})` : '';\n            itemsText.push(`${index + 1}. ${item.name}${commentString} : ${item.quantity} ${item.unit}`);\n        });\n    });\n\n    return itemsText.join('\\n');\n}\n\nexport function ItemList(props: {\n    list: Item[],\n    copyList?: boolean,\n    removeItem?: ((x: Item) => void),\n    newItemStatesAndSetters?: ItemStatesAndSetters,\n    setNewList?: React.Dispatch<React.SetStateAction<Item[]>>,\n    date?: Date\n}) {\n\n    let [copied, setCopied] = useState(false);\n    const storage = useContext(StorageContext);\n    let history = useHistory();\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(itemListToText(props.list))\n            .then(() => {\n                setCopied(true);\n                setTimeout(() => {\n                    setCopied(false);\n                }, 1000);\n            });\n    };\n\n    const handleNewListFrom = function(e: React.FormEvent<HTMLInputElement>) {\n        e.preventDefault();\n\n        if (!props.setNewList) {\n            return;\n        }\n\n        props.setNewList(currList => {\n            if (!props.list) {\n                return currList;\n            }\n\n            let newDate = props.date || new Date();\n\n            let outMap = new Map<string, Item>();\n            currList.forEach((item) => {\n                outMap.set(item.name, item);\n            });\n\n            props.list.forEach((item) => {\n                item = cloneItem(item);\n                item.saved = 0;\n                item.date = newDate;\n                outMap.set(item.name, item);\n            });\n\n            let outList: Item[] = [];\n            outMap.forEach((item) => {\n                outList.push(item);\n                storage.addUpdate(item);\n            });\n\n            return outList;\n        });\n\n        history.push('/');\n    }\n\n    return (\n        <div style={{height: \"calc(100vh - 220px)\"}}>\n            <ol className=\"list-group list-group-flush list-group-numbered\" style={{height: \"100%\", overflowY:\"auto\"}}>\n                {props.list.map(item =>\n                    <ItemDisplay item={item} key={item.name}\n                        newItemStatesAndSetters={props.newItemStatesAndSetters}\n                        removeItem={props.removeItem}/>)}\n            </ol>\n            <br/>\n            {\n                props.copyList && props.list.length > 0 &&\n                <input type=\"button\" value={copied ? 'Copied!' : 'Copy list'} className={\"btn \" + (copied ? \"btn-success\" : \"btn-primary\")}\n                    onClick={handleCopy}/>\n            }\n            {\n                props.setNewList && props.date && props.list.length > 0 &&\n                <input type=\"button\" value=\"Create new list\" className=\"btn btn-primary\"\n                    onClick={handleNewListFrom}/>\n            }\n        </div>\n    );\n}\n\nexport function NewItemList(props: {\n    list: Item[],\n    removeItem: (x: Item) => void,\n    newItemStatesAndSetters: ItemStatesAndSetters,\n    setRunFetchEffect: (flag: boolean) => void\n}) {\n    const storage = useContext(StorageContext);\n\n    const clearNewItemControls = () => {\n        props.newItemStatesAndSetters.setName('');\n        props.newItemStatesAndSetters.setQuantity(0);\n        props.newItemStatesAndSetters.setUnit('');\n        props.newItemStatesAndSetters.setComment('');\n        props.newItemStatesAndSetters.setExisting(false);\n        props.newItemStatesAndSetters.setCategory(undefined);\n    };\n\n    const handleClear = () => {\n        if (props.list.length === 0)\n            return;\n\n        storage.clearUnsaved()?.then(() => {\n            clearNewItemControls();\n            props.setRunFetchEffect(true);\n        })\n    };\n\n    const handleSave = () => {\n        if (props.list.length === 0)\n            return;\n\n        const saveDate = new Date();\n        storage.saveUnsaved(saveDate)?.then(() => {\n            clearNewItemControls();\n            props.setRunFetchEffect(true);\n        });\n\n        navigator.clipboard.writeText(itemListToText(props.list));\n    };\n\n    return (\n        <div id=\"new-item-list-wrapper\">\n            <p>Shopping list({props.list.length})</p>\n            <ItemList list={props.list} newItemStatesAndSetters={props.newItemStatesAndSetters}\n                removeItem={props.removeItem}/>\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", marginTop: 25}}>\n                <input type=\"button\" value=\"Save and Copy\" className=\"btn btn-primary\"\n                    onClick={handleSave} style={{flexGrow: 0.40}} disabled={props.list.length === 0}></input>\n                <input type=\"button\" value=\"Clear\" className=\"btn btn-danger\"\n                    onClick={handleClear} style={{flexGrow: 0.40}} disabled={props.list.length === 0}></input>\n            </div>\n        </div>\n    );\n}","import React, { useContext, useState } from 'react';\nimport { Item, ItemStatesAndSetters } from '../types/item';\nimport { ItemControls, ItemSearchList } from '../components/ItemControls';\nimport DebugItemLists from '../components/DebugItemLists';\nimport { NewItemList } from '../components/ItemList';\nimport { StorageContext } from '../contexts/storage';\n\nimport '../styles/newlist.css';\n\nexport default function NewList(props: {\n  masterList: Set<string>;\n  masterItems: Item[];\n  setMasterList: React.Dispatch<React.SetStateAction<Set<string>>>;\n  newList: Item[];\n  setNewList: React.Dispatch<React.SetStateAction<Item[]>>;\n  newItemStatesAndSetters: ItemStatesAndSetters;\n  setRunFetchEffect: React.Dispatch<React.SetStateAction<boolean>>;\n}) {\n  const storage = useContext(StorageContext);\n  const {\n    newItemStatesAndSetters, newList, setNewList,\n    masterList, masterItems, setMasterList,\n    setRunFetchEffect,\n  } = props;\n  const {\n    name,\n    setName,\n    setQuantity,\n    setUnit,\n    setComment,\n    setExisting,\n    setCategory,\n  } = newItemStatesAndSetters;\n\n  const [searchListVisible, setSearchListVisible] = useState<boolean>(false);\n  const [searchYPosition, setSearchYPosition] = useState<number>(0);\n\n  const removeItem = (item: Item) => {\n    const nameToRemove = item.name;\n    const list = newList.filter((oldItem) => oldItem.name !== nameToRemove);\n    storage.delete(item);\n    setNewList(list);\n    if (name === nameToRemove) {\n      setName('');\n      setQuantity(0);\n      setUnit('');\n      setComment('');\n      setExisting(false);\n      setCategory(undefined);\n    }\n  };\n\n  const debugMode = false;\n\n  return (\n    <div id=\"newlist-wrapper\">\n      {(searchListVisible ?\n        (\n          <ItemSearchList\n            masterItems={masterItems}\n            newList={newList}\n            newItemStatesAndSetters={newItemStatesAndSetters}\n            setSearchListVisible={setSearchListVisible}\n            searchYPosition={searchYPosition}\n            setSearchYPosition={setSearchYPosition}\n          />\n        ) :\n        (\n          <ItemControls\n            masterList={masterList}\n            setMasterList={setMasterList}\n            newList={newList}\n            setNewList={setNewList}\n            masterItems={masterItems}\n            newItemStatesAndSetters={newItemStatesAndSetters}\n            setSearchListVisible={setSearchListVisible}\n          />\n        )\n      )}\n\n      <div className=\"sepline\" />\n      <NewItemList\n        list={newList}\n        newItemStatesAndSetters={newItemStatesAndSetters}\n        removeItem={removeItem}\n        setRunFetchEffect={setRunFetchEffect}\n      />\n      {debugMode && <DebugItemLists masterList={masterList} newList={newList} />}\n      <br />\n    </div>\n  );\n}\n","/* eslint-disable */\nimport React from \"react\";\nimport { Item } from '../types/item';\n\nexport function ListDisplay(props: {\n    date: number,\n    items: Item[],\n    selected: boolean;\n    setSelectedDate: React.Dispatch<React.SetStateAction<number>>;\n    readOnly: boolean;\n}) {\n    const handleListClick = () => {\n        props.setSelectedDate(props.date);\n    };\n\n    const removeList = () => {\n        // TODO: remove from items from db and re-fetch.\n    };\n\n    return (\n        <li className={\"list-group-item d-flex justify-content-between align-items-start\" + (props.selected ? \" active\" : \"\")}>\n            <div className=\"ms-2 me-auto\" style={{width: \"100vw\"}} onClick={handleListClick}>\n                <div className=\"fw-bold\" style={{display: \"inline\"}}>{new Date(props.date).toLocaleString()}</div>\n                <div>{props.items.length}&nbsp;items</div>\n            </div>\n            {!props.readOnly && <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={removeList}></button> }\n        </li>\n    );\n}","import React, { useState } from 'react';\nimport { Item } from '../types/item';\nimport { ListDisplay } from '../components/ListDisplay';\nimport { ItemList } from '../components/ItemList';\n\nimport '../styles/previouslists.css';\n\nexport default function PreviousLists(props: {\n  dateMap: Map<number, Item[]>;\n  setNewList: React.Dispatch<React.SetStateAction<Item[]>>;\n  date: Date;\n}) {\n  const [selectedDate, setSelectedDate] = useState<number>(0);\n  const { dateMap, setNewList, date } = props;\n  const dateList = [...dateMap.keys()]\n    .sort((date1, date2) => date2.valueOf() - date1.valueOf());\n  const selectedItems = dateMap.get(selectedDate);\n  return (\n    <div style={{ marginLeft: 10, width: '90%' }}>\n      <p>\n        Previous shopping lists(\n        {dateMap.size}\n        )\n      </p>\n      <div id=\"previous-lists-wrapper\">\n        <div>\n          <ol id=\"previous-lists\" className=\"list-group list-group-flush list-group-numbered\">\n            {dateList.map((thisDate) => (\n              <ListDisplay\n                date={thisDate}\n                items={dateMap.get(thisDate) || []}\n                key={thisDate}\n                selected={thisDate === selectedDate}\n                setSelectedDate={setSelectedDate}\n                readOnly\n              />\n            ))}\n          </ol>\n        </div>\n        {dateList.length !== 0 && <div className=\"sepline\" />}\n        <div id=\"previous-list-one\">\n          {\n            (selectedDate !== 0 && selectedItems !== undefined) && (\n            <ItemList\n              list={selectedItems}\n              copyList\n              setNewList={setNewList}\n              date={date}\n            />\n            )\n          }\n        </div>\n      </div>\n      <br />\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { StorageContext } from '../contexts/storage';\n\nimport '../styles/datapage.css';\n\nfunction DataPage(props: {\n  setRunFetchEffect: React.Dispatch<React.SetStateAction<boolean>>;\n}) {\n  const [name, setName] = useState(window.localStorage.getItem('settings_name'));\n  const [message, setMessage] = useState(window.localStorage.getItem('settings_message'));\n  const [importStatus, setImportStatus] = useState(0);\n\n  const storage = useContext(StorageContext);\n\n  const { setRunFetchEffect } = props;\n\n  function handleNameChange(e: React.FormEvent<HTMLInputElement>) {\n    setName(e.currentTarget.value);\n  }\n\n  function handleMessageChange(e: React.FormEvent<HTMLTextAreaElement>) {\n    setMessage(e.currentTarget.value);\n  }\n\n  function handleSave() {\n    if (name) {\n      window.localStorage.setItem('settings_name', name);\n    }\n\n    if (message) {\n      window.localStorage.setItem('settings_message', message);\n    }\n  }\n\n  function handleClear() {\n    window.localStorage.removeItem('settings_name');\n    window.localStorage.removeItem('settings_message');\n    setName('');\n    setMessage('');\n  }\n\n  function handleExport() {\n    storage.exportToJSONText().then((text) => {\n      const a = document.createElement('a');\n      const file = new Blob([text], { type: 'text/plain' });\n      a.href = URL.createObjectURL(file);\n      a.download = `shopping-list-export-${(new Date()).toLocaleDateString()}.json`;\n      a.click();\n    });\n  }\n\n  function handleImport() {\n    const inp = document.getElementById('importFile');\n    inp?.click();\n  }\n\n  function onLocalStorageChanged() {\n    setName(window.localStorage.getItem('settings_name'));\n    setMessage(window.localStorage.getItem('settings_message'));\n  }\n\n  function handleImportFile() {\n    const inp = document.getElementById('importFile') as HTMLInputElement;\n    if (!inp || !inp.files || !inp.files.length) return;\n    inp.files[0].text().then((jsonText) => storage\n      .importFromJSONText(jsonText)).then((res: boolean) => {\n      if (res) {\n        onLocalStorageChanged();\n        setRunFetchEffect(true);\n      }\n      setImportStatus(res ? 1 : -1);\n      setTimeout(() => {\n        setImportStatus(0);\n      }, 1000);\n      return true;\n    });\n  }\n\n  let importButtonText = 'Import from file';\n  if (importStatus === -1) {\n    importButtonText = 'Import failed';\n  } else if (importStatus !== 0) {\n    importButtonText = 'Import successful!';\n  }\n\n  const settingsNameId = 'settings-name';\n\n  return (\n    <div id=\"data-page\">\n      <div id=\"import-export\">\n        <input\n          type=\"button\"\n          value=\"Export Data\"\n          className=\"data-button data-export-button\"\n          onClick={handleExport}\n          style={{ marginBottom: 20 }}\n        />\n        <input\n          type=\"button\"\n          value={importButtonText}\n          className=\"data-button data-import-button\"\n          onClick={handleImport}\n        />\n        <input\n          type=\"file\"\n          id=\"importFile\"\n          onChange={handleImportFile}\n          style={{ display: 'none' }}\n          accept=\".json\"\n        />\n      </div>\n      <br />\n      <div className=\"sepline-horiz\" />\n      <form id=\"settings-form\">\n        <h5>Delivery Information</h5>\n        <br />\n        <div className=\"mb-3\">\n          <label\n            htmlFor={settingsNameId}\n            className=\"form-label\"\n          >\n            Name\n            <input\n              type=\"text\"\n              id={settingsNameId}\n              className=\"form-control\"\n              aria-label=\"Your name\"\n              placeholder=\"Your name\"\n              onChange={handleNameChange}\n              // eslint-disable-next-line no-unneeded-ternary\n              value={name ? name : ''}\n            />\n          </label>\n        </div>\n        <div className=\"mb-3\">\n          <label\n            htmlFor=\"settings-message\"\n            className=\"form-label\"\n          >\n            Custom message for delivery\n            <textarea\n              id=\"settings-message\"\n              className=\"form-control\"\n              rows={6}\n              aria-label=\"Your message\"\n              placeholder=\"Your message\"\n              onChange={handleMessageChange}\n              // eslint-disable-next-line no-unneeded-ternary\n              value={message ? message : ''}\n            />\n          </label>\n        </div>\n        <br />\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n          <input\n            type=\"submit\"\n            value=\"Save\"\n            className=\"btn btn-success\"\n            onClick={handleSave}\n            style={{ flexGrow: 0.40 }}\n          />\n          <input\n            type=\"button\"\n            value=\"Clear\"\n            className=\"btn btn-danger\"\n            onClick={handleClear}\n            style={{ flexGrow: 0.40 }}\n          />\n        </div>\n        <br />\n      </form>\n    </div>\n  );\n}\n\nexport default DataPage;\n","import {\n  Item, cloneItem, BooleanNumber, JSONRepresentationType, getItemFromObject, StorageMin,\n} from '../types/item';\n\nconst DB_NAME = 'shopping-list-app-db';\nconst DB_VERSION = 3;\nconst DB_SHOPPING_LIST_STORE_NAME = 'shopping-list-store';\n\ntype ItemWithID = Item & { id: number };\ntype JSONExportType = {\n  items: Item[],\n  name: string,\n  message: string,\n};\n\nexport class ShoppingDatabase {\n  private db: IDBDatabase;\n\n  constructor(db: IDBDatabase) {\n    this.db = db;\n  }\n\n  getAllItems(maxCount = -1): Promise<Item[]> {\n    return new Promise<Item[]>((resolve, reject) => {\n      const objectStore = this.db.transaction(DB_SHOPPING_LIST_STORE_NAME)\n        .objectStore(DB_SHOPPING_LIST_STORE_NAME);\n      const getReq = objectStore.getAll(null, maxCount > 0 ? maxCount : undefined);\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n      getReq.onerror = (event: Event) => {\n        console.debug('getAllItems getAll() failed');\n        reject(new Error(`${DB_SHOPPING_LIST_STORE_NAME} getAll: errCode = ${getReq.error}`));\n      };\n\n      // eslint-disable-next-line no-unused-vars\n      getReq.onsuccess = function onsuccess(this: IDBRequest<unknown[]>) {\n        console.debug('getAllItems: getAll() succeeded.');\n        resolve(this.result as Item[]);\n      };\n    });\n  }\n\n  getItemsWithDate(date: Date, keyRangeOnly = IDBKeyRange.only,\n    transaction?: IDBTransaction): Promise<Item[]> {\n    return new Promise<Item[]>((resolve, reject) => {\n      const objectStore = (transaction || this.db.transaction(DB_SHOPPING_LIST_STORE_NAME))\n        .objectStore(DB_SHOPPING_LIST_STORE_NAME);\n      const getReq = objectStore.index('date').getAll(keyRangeOnly(date));\n\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n      getReq.onerror = (event: Event) => {\n        console.debug('getItemsWithDate .index(\"date\").getAll() failed');\n        reject(new Error(`${DB_SHOPPING_LIST_STORE_NAME} index(\"date\").getAll: errCode = ${getReq.error}`));\n      };\n\n      // eslint-disable-next-line no-unused-vars\n      getReq.onsuccess = function onsuccess(this: IDBRequest<unknown[]>) {\n        console.debug('getItemsWithDate .index(\"date\").getAll() succeeded');\n        resolve(this.result as Item[]);\n      };\n    });\n  }\n\n  getItemsSaved(saved: BooleanNumber, keyRangeOnly = IDBKeyRange.only,\n    transaction?: IDBTransaction): Promise<Item[]> {\n    return new Promise<Item[]>((resolve, reject) => {\n      const objectStore = (transaction || this.db.transaction(DB_SHOPPING_LIST_STORE_NAME))\n        .objectStore(DB_SHOPPING_LIST_STORE_NAME);\n      const getReq = objectStore.index('saved').getAll(keyRangeOnly(saved));\n\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n      getReq.onerror = (event: Event) => {\n        console.debug('getItemsSaved .index(\"date\").getAll() failed');\n        reject(new Error(`${DB_SHOPPING_LIST_STORE_NAME} index(\"date\").getAll: errCode${getReq.error}`));\n      };\n\n      // eslint-disable-next-line no-unused-vars\n      getReq.onsuccess = function onsuccess(this: IDBRequest<unknown[]>) {\n        console.debug('getItemsSaved .index(\"date\").getAll() succeeded');\n        resolve(this.result as Item[]);\n      };\n    });\n  }\n\n  deleteItem(item: Item, keyRangeOnly = IDBKeyRange.only): Promise<undefined> {\n    const transaction = this.db.transaction(DB_SHOPPING_LIST_STORE_NAME, 'readwrite');\n    const objectStore = transaction.objectStore(DB_SHOPPING_LIST_STORE_NAME);\n    return this.getItemsWithDate(item.date, keyRangeOnly, transaction)\n      .then((items) => new Promise<undefined>((resolve, reject) => {\n        console.debug('deleteItem: getItemsWithDate succeeded');\n        let found = false;\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n        const onerror = (event: Event) => {\n          console.debug('deleteItem add/update failed');\n          reject(new Error(`${DB_SHOPPING_LIST_STORE_NAME} add/update failed`));\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n        const onsuccess = function onsuccess(this: IDBRequest<undefined>) {\n          console.debug('deleteItem: add/update succeeded.');\n          resolve(undefined);\n        };\n\n        (items as ItemWithID[]).forEach((matchItem: ItemWithID) => {\n          if (!found && matchItem.name === item.name && matchItem.saved === item.saved) {\n            console.debug('deleteItem: found a matching item, deleting it...');\n            const setReq = objectStore.delete(keyRangeOnly(matchItem.id));\n            setReq.onerror = onerror;\n            setReq.onsuccess = onsuccess;\n            found = true;\n          }\n        });\n\n        if (!found) {\n          console.debug('warning: deleteItem no matching entry.');\n          resolve(undefined);\n        }\n      })).catch((reason) => {\n        console.debug('deleteItem: getItemsWithDate() failed');\n        return Promise.reject(new Error(`${DB_SHOPPING_LIST_STORE_NAME} getItemsWithDate: reason ${reason}`));\n      });\n  }\n\n  clearAll(): Promise<undefined> {\n    return new Promise<undefined>((resolve, reject) => {\n      const request = this.db.transaction(DB_SHOPPING_LIST_STORE_NAME, 'readwrite')\n        .objectStore(DB_SHOPPING_LIST_STORE_NAME).clear();\n\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n      request.onerror = (event: Event) => {\n        console.debug('clearAll: clear() failed');\n        reject(new Error(`${DB_SHOPPING_LIST_STORE_NAME} clear: errCode${request.error}`));\n      };\n\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n      request.onsuccess = function onsuccess(this: IDBRequest<undefined>) {\n        console.debug('clearAll: clear() succeeded');\n        resolve(this.result);\n      };\n    });\n  }\n\n  clearUnsaved(keyRangeOnly = IDBKeyRange.only): Promise<undefined> {\n    const transaction = this.db.transaction(DB_SHOPPING_LIST_STORE_NAME, 'readwrite');\n    const objectStore = transaction.objectStore(DB_SHOPPING_LIST_STORE_NAME);\n    return new Promise<undefined>((resolve, reject) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n      transaction.onerror = (event: Event) => {\n        console.debug('clearUnsaved: clear() failed');\n        reject(new Error(`${DB_SHOPPING_LIST_STORE_NAME} clear: errCode${transaction.error}`));\n      };\n\n      transaction.oncomplete = () => {\n        console.debug('clearUnsaved: clear() succeeded');\n        resolve(undefined);\n      };\n\n      this.getItemsSaved(0, keyRangeOnly, transaction).then((items: unknown) => {\n        (items as ItemWithID[]).forEach((clearItem: ItemWithID) => {\n          objectStore.delete(keyRangeOnly(clearItem.id));\n        });\n      }); // catch is not necessary, it will reject in transaction.onerror().\n    });\n  }\n\n  // eslint-disable-next-line no-undef\n  addUpdateItem(item: Item, keyRangeOnly = IDBKeyRange.only): Promise<IDBValidKey> {\n    const transaction = this.db.transaction(DB_SHOPPING_LIST_STORE_NAME, 'readwrite');\n    const objectStore = transaction.objectStore(DB_SHOPPING_LIST_STORE_NAME);\n    return this.getItemsWithDate(item.date, keyRangeOnly, transaction)\n      // eslint-disable-next-line no-undef\n      .then((items: unknown) => new Promise<IDBValidKey>((resolve, reject) => {\n        console.debug('addUpdateItem: getItemsWithDate succeeded');\n        let found = false;\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n        const onerror = (event: Event) => {\n          console.debug('addUpdateItem add/update failed');\n          reject(new Error(`${DB_SHOPPING_LIST_STORE_NAME} add/update failed`));\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars, no-undef\n        const onsuccess = function onsuccess(this: IDBRequest<IDBValidKey>) {\n          console.debug('addUpdateItem: add/update succeeded.');\n          resolve(this.result);\n        };\n\n        (items as ItemWithID[]).forEach((prevItem: ItemWithID) => {\n          if (!found && prevItem.name === item.name) {\n            console.debug('addUpdateItem: found a matching item, updating it...');\n            const itemClone = { ...item, id: 0 };\n            itemClone.id = prevItem.id;\n            const setReq = objectStore.put(itemClone);\n            setReq.onerror = onerror;\n            setReq.onsuccess = onsuccess;\n            found = true;\n          }\n        });\n\n        if (!found) {\n          console.debug('addUpdateItem no matching entry yet');\n          const setReq = objectStore.add(item);\n          setReq.onerror = onerror;\n          setReq.onsuccess = onsuccess;\n        }\n      })).catch((reason) => {\n        console.debug('addUpdateItem: getItemsWithDate() failed');\n        return Promise.reject(new Error(`${DB_SHOPPING_LIST_STORE_NAME} getItemsWithDate: reason ${reason}`));\n      });\n  }\n\n  saveUnsaved(date: Date, keyRangeOnly = IDBKeyRange.only): Promise<undefined> {\n    const transaction = this.db.transaction(DB_SHOPPING_LIST_STORE_NAME, 'readwrite');\n    const objectStore = transaction.objectStore(DB_SHOPPING_LIST_STORE_NAME);\n    return new Promise<undefined>((resolve, reject) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n      transaction.onerror = (event: Event) => {\n        console.debug('saveUnsaved: transaction failed');\n        reject(new Error(`${DB_SHOPPING_LIST_STORE_NAME} transaction: errCode${transaction.error}`));\n      };\n\n      transaction.oncomplete = () => {\n        console.debug('saveUnsaved: transaction succeeded');\n        resolve(undefined);\n      };\n\n      this.getItemsSaved(0, keyRangeOnly, transaction).then((items: unknown) => {\n        (items as Item[]).forEach((unSavedItem: Item) => {\n          const newItem = cloneItem(unSavedItem);\n          newItem.date = date;\n          newItem.saved = 1;\n          objectStore.put(newItem);\n        });\n        (items as ItemWithID[]).forEach((unSavedItem: ItemWithID) => {\n          objectStore.delete(keyRangeOnly(unSavedItem.id));\n        });\n      }); // catch is not necessary, it will reject in transaction.onerror().\n    });\n  }\n\n  public async exportToJSON(localStorage: StorageMin = window.localStorage):\n    Promise<JSONExportType> {\n    try {\n      const items = await this.getAllItems();\n      return {\n        items,\n        name: localStorage.getItem('settings_name') || '',\n        message: localStorage.getItem('settings_message') || '',\n      };\n    } catch (e) {\n      return {\n        items: [],\n        name: '',\n        message: '',\n      };\n    }\n  }\n\n  public async importFromJSON(jsonString: string,\n    keyRangeOnly = IDBKeyRange.only,\n    localStorage: StorageMin = window.localStorage):\n    Promise<boolean> {\n    let obj;\n\n    try {\n      obj = JSON.parse(jsonString);\n    } catch (e) {\n      // console.log('JSON parse error: ' + e);\n      return false;\n    }\n\n    if (typeof obj !== 'object') {\n      return false;\n    }\n\n    if (!Array.isArray(obj.items)) {\n      return false;\n    }\n\n    const items: Item[] = [];\n    (obj.items as unknown[]).forEach((itemObj) => {\n      const item = getItemFromObject(itemObj);\n      if (item) {\n        items.push(item);\n      }\n    });\n\n    const repr: JSONRepresentationType = {\n      items,\n      name: typeof obj.name === 'string' ? obj.name : '',\n      message: typeof obj.message === 'string' ? obj.message : '',\n    };\n\n    let retVal = false;\n\n    if (items.length) {\n      await this.clearAll();\n      for (let i = 0; i < items.length; ++i) {\n        try {\n          // eslint-disable-next-line no-await-in-loop\n          await this.addUpdateItem(items[i], keyRangeOnly);\n        } catch (e) {\n          console.debug(`Error adding item : ${items[i]} err = ${e}`);\n          return false;\n        }\n      }\n      retVal = true;\n    }\n\n    if (repr.name !== '') {\n      localStorage.setItem('settings_name', repr.name);\n      retVal = true;\n    }\n    if (repr.message !== '') {\n      localStorage.setItem('settings_message', repr.message);\n      retVal = true;\n    }\n\n    return retVal;\n  }\n}\n\nexport const openDb = (storageDb: IDBFactory, beSilent = false):\n  Promise<ShoppingDatabase> => {\n  if (beSilent) {\n    console.debug = () => undefined;\n  }\n\n  return new Promise<ShoppingDatabase>((resolve, reject) => {\n    console.debug(`Opening DB: ${DB_NAME}`);\n    const openDbReq = storageDb.open(DB_NAME, DB_VERSION);\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n    openDbReq.onsuccess = function onsuccess(this: IDBRequest<IDBDatabase>) {\n      console.debug(`Opened DB: ${DB_NAME}`);\n      resolve(new ShoppingDatabase(this.result));\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, no-unused-vars\n    openDbReq.onerror = (event: Event) => {\n      reject(new Error(`openDb failed errCode: ${openDbReq.error}`));\n    };\n\n    type DatabaseWrapper = { result: IDBDatabase };\n    type TransactionWrapper = { transaction: IDBTransaction };\n\n    openDbReq.onupgradeneeded = (event: Event) => {\n      console.debug(`openDb.onupgradeneeded : ${DB_NAME}`);\n      if (!event || !event.currentTarget ||\n        !(event.currentTarget as unknown as DatabaseWrapper).result) {\n        console.debug(`openDb.onupgradeneeded : ${DB_NAME} no new db in event!`);\n        reject(new Error('onupgradeneeded: no new db!'));\n        return;\n      }\n      const db: IDBDatabase = (event.currentTarget as unknown as DatabaseWrapper).result;\n      const tx: IDBTransaction = (event.target as unknown as TransactionWrapper).transaction;\n\n      if (!db.objectStoreNames.contains(DB_SHOPPING_LIST_STORE_NAME)) {\n        const listStore = db.createObjectStore(DB_SHOPPING_LIST_STORE_NAME,\n          { keyPath: 'id', autoIncrement: true });\n        listStore.createIndex('date', 'date', { unique: false });\n        listStore.createIndex('saved', 'saved', { unique: false });\n      } else {\n        const listStore = tx.objectStore(DB_SHOPPING_LIST_STORE_NAME);\n        if (!listStore.indexNames.contains('saved')) {\n          listStore.createIndex('saved', 'saved', { unique: false });\n        }\n      }\n    };\n\n    openDbReq.onblocked = () => {\n      console.debug(`openDb.onupgradeneeded : ${DB_NAME} blocked on other tabs`);\n      reject(new Error('openDb upgrade: close other tabs and try again.'));\n    };\n  });\n};\n","import {\n  HashRouter,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\n\nimport './styles/navbar.css';\nimport './styles/buttons.css';\nimport './styles/list.css';\nimport React from 'react';\nimport { Item, ItemStatesAndSetters } from './types/item';\n\nimport NewList from './pages/NewList';\nimport PreviousLists from './pages/PreviousLists';\nimport DataPage from './pages/DataPage';\nimport { openDb } from './storage/storageDefs';\nimport { StorageType, StorageProvider } from './contexts/storage';\n\nconst { useEffect, useState } = React;\nconst storage = new StorageType();\n\n// eslint-disable-next-line func-names\n(function () {\n  openDb(indexedDB).then((db) => {\n    storage.setDB(db);\n    storage.fetch();\n  });\n}());\n\nfunction App() {\n  const [masterList, setMasterList] = useState(new Set<string>([]));\n  const [dbIsEmpty, setDBIsEmpty] = useState(false);\n  const [masterItems, setMasterItems] = useState([] as Item[]);\n  const [newList, setNewList] = useState<Item[]>([]);\n  const [dateMap, setDateMap] = useState<Map<number, Item[]>>(new Map<number, Item[]>());\n  const [name, setName] = useState('');\n  const [quantity, setQuantity] = useState(0);\n  const [unit, setUnit] = useState('');\n  const [comment, setComment] = useState('');\n  const [date, setDate] = useState(new Date());\n  const [category, setCategory] = useState(undefined as (string | undefined));\n  const [existing, setExisting] = useState(false);\n  const [runFetchEffect, setRunFetchEffect] = useState(false);\n  const itemStatesAndSetters: ItemStatesAndSetters = {\n    name,\n    setName,\n    quantity,\n    setQuantity,\n    unit,\n    setUnit,\n    comment,\n    setComment,\n    existing,\n    setExisting,\n    date,\n    setDate,\n    category,\n    setCategory,\n  };\n\n  // fetch initial state from DB.\n  useEffect(() => {\n    if (!runFetchEffect && (masterList.size || dbIsEmpty)) {\n      return;\n    }\n\n    if (storage.hasDB()) {\n      // console.log('Fetching...');\n      storage.fetch();\n    }\n\n    const dbListener = (mList: Item[]) => {\n      if (runFetchEffect) setRunFetchEffect(false);\n      setDBIsEmpty((mList.length === 0));\n      setMasterList(new Set<string>(mList.map((item) => item.name)));\n      const nameToItem = new Map<string, Item>();\n      const currentList: Item[] = [];\n      const dateMapTemp = new Map<number, Item[]>();\n      mList.forEach((item) => {\n        if (!item.saved) {\n          currentList.push(item);\n        }\n\n        const prevItem = nameToItem.get(item.name);\n        if (!prevItem) {\n          nameToItem.set(item.name, item);\n        } else if (prevItem.date < item.date) {\n          nameToItem.set(item.name, item);\n        }\n\n        if (item.saved) {\n          const dateItemList = dateMapTemp.get(item.date.valueOf());\n          if (!dateItemList) {\n            dateMapTemp.set(item.date.valueOf(), [item]);\n          } else {\n            dateItemList.push(item);\n          }\n        }\n      });\n      setMasterItems([...nameToItem.values()]);\n      setNewList(currentList);\n      if (currentList.length) {\n        setDate(currentList[0].date);\n      }\n      setDateMap(dateMapTemp);\n    };\n    storage.addListener(dbListener);\n\n    // eslint-disable-next-line consistent-return\n    return function cleanup() {\n      storage.removeListener(dbListener);\n    };\n  });\n\n  return (\n    <HashRouter>\n      <div>\n        <nav>\n          <ul className=\"nav\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">New list</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/previous\" className=\"nav-link\">Previous lists</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/data\" className=\"nav-link\">Data</Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"nav-space\" />\n        <br />\n\n        <StorageProvider value={storage}>\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/data\">\n              <DataPage setRunFetchEffect={setRunFetchEffect} />\n            </Route>\n            <Route path=\"/previous\">\n              <PreviousLists dateMap={dateMap} setNewList={setNewList} date={date} />\n            </Route>\n            <Route path=\"/\">\n              <NewList\n                masterList={masterList}\n                setMasterList={setMasterList}\n                newList={newList}\n                setNewList={setNewList}\n                masterItems={masterItems}\n                newItemStatesAndSetters={itemStatesAndSetters}\n                setRunFetchEffect={setRunFetchEffect}\n              />\n            </Route>\n          </Switch>\n        </StorageProvider>\n\n        <footer><small>&copy; Dennis Francis 2023</small></footer>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}